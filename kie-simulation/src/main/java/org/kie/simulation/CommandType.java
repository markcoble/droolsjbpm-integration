//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.07.21 at 01:49:18 PM BST 
//


package org.kie.simulation;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CommandType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CommandType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="getKieContainer"/>
 *     &lt;enumeration value="insert"/>
 *     &lt;enumeration value="fireAllRules"/>
 *     &lt;enumeration value="startProceess"/>
 *     &lt;enumeration value="getGlobal"/>
 *     &lt;enumeration value="set"/>
 *     &lt;enumeration value="out"/>
 *     &lt;enumeration value="end"/>
 *     &lt;enumeration value="after"/>
 *     &lt;enumeration value="dispose"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CommandType")
@XmlEnum
public enum CommandType {

    @XmlEnumValue("getKieContainer")
    GET_KIE_CONTAINER("getKieContainer"),
    @XmlEnumValue("insert")
    INSERT("insert"),
    @XmlEnumValue("fireAllRules")
    FIRE_ALL_RULES("fireAllRules"),
    @XmlEnumValue("startProceess")
    START_PROCEESS("startProceess"),
    @XmlEnumValue("getGlobal")
    GET_GLOBAL("getGlobal"),
    @XmlEnumValue("set")
    SET("set"),
    @XmlEnumValue("out")
    OUT("out"),
    @XmlEnumValue("end")
    END("end"),
    @XmlEnumValue("after")
    AFTER("after"),
    @XmlEnumValue("dispose")
    DISPOSE("dispose");
    private final String value;

    CommandType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CommandType fromValue(String v) {
        for (CommandType c: CommandType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
